<?php

use yii\helpers\Html;
use yii\helpers\Url;

/** @var yii\web\View $this */

$this->title = 'Load Fake Data';
$this->params['breadcrumbs'][] = $this->title;
?>
<div class="data-index">

    <h1><?= Html::encode($this->title) ?></h1>

    <?php if (Yii::$app->session->hasFlash('success')): ?>
        <div class="alert alert-success">
            <?= Yii::$app->session->getFlash('success') ?>
        </div>
    <?php endif; ?>

    <?php if (Yii::$app->session->hasFlash('error')): ?>
        <div class="alert alert-danger">
            <?= Yii::$app->session->getFlash('error') ?>
        </div>
    <?php endif; ?>

    <p>
        Click the button below to load fake data into the database.
        This will generate users, projects, and tasks.
    </p>
    <p>
        You can customize the amount of data generated by adding query parameters to the URL that triggers the loading (this page doesn't have a form for it yet, but the backend action supports it). For example:
        <code><?= Url::to(['/data/load-data', 'userCount' => 5, 'projectPerUserCount' => 1, 'taskPerProjectCount' => 3], true) ?></code>
    </p>

    <p>
        <?= Html::a('Load Default Fake Data', ['/data/load-data'], [
            'class' => 'btn btn-primary',
            'data' => [
                'confirm' => 'Are you sure you want to load fake data? This may take a few moments.',
                'method' => 'post', // Good practice to use POST for actions that change state
            ],
        ]) ?>
    </p>

    <p>
        <?= Html::a('Load Custom Fake Data (e.g., 5 Users, 1 Project/User, 3 Tasks/Project)', Url::to(['/data/load-data', 'userCount' => 5, 'projectPerUserCount' => 1, 'taskPerProjectCount' => 3]), [
            'class' => 'btn btn-info',
            'data' => [
                'confirm' => 'Are you sure you want to load custom fake data?',
                'method' => 'post',
            ],
        ]) ?>
    </p>

    <hr>

    <h3>Important Notes:</h3>
    <ul>
        <li>The data generation process is executed via a console command.</li>
        <li>If you encounter issues, check the Yii application logs (<code>runtime/logs/app.log</code>).</li>
        <li>Ensure your database connection is correctly configured in <code>config/db.php</code>.</li>
        <li>Ensure the `task_priority` and `task_status` tables have their initial data (seeded by migrations `m240726_000003` and `m240726_000004`).</li>
        <li>The console command output (success or errors) will be displayed above after clicking the button.</li>
    </ul>

</div>
